{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst path = require(\"path\");\n\nconst fsScandir = require(\"@nodelib/fs.scandir\");\n\nclass Settings {\n  constructor(_options = {}) {\n    this._options = _options;\n    this.basePath = this._getValue(this._options.basePath, undefined);\n    this.concurrency = this._getValue(this._options.concurrency, Number.POSITIVE_INFINITY);\n    this.deepFilter = this._getValue(this._options.deepFilter, null);\n    this.entryFilter = this._getValue(this._options.entryFilter, null);\n    this.errorFilter = this._getValue(this._options.errorFilter, null);\n    this.pathSegmentSeparator = this._getValue(this._options.pathSegmentSeparator, path.sep);\n    this.fsScandirSettings = new fsScandir.Settings({\n      followSymbolicLinks: this._options.followSymbolicLinks,\n      fs: this._options.fs,\n      pathSegmentSeparator: this._options.pathSegmentSeparator,\n      stats: this._options.stats,\n      throwErrorOnBrokenSymbolicLink: this._options.throwErrorOnBrokenSymbolicLink\n    });\n  }\n\n  _getValue(option, value) {\n    return option !== null && option !== void 0 ? option : value;\n  }\n\n}\n\nexports.default = Settings;","map":{"version":3,"sources":["C:/Users/DELL/Desktop/Trainig/MERN-stack/client/node_modules/@nodelib/fs.walk/out/settings.js"],"names":["Object","defineProperty","exports","value","path","require","fsScandir","Settings","constructor","_options","basePath","_getValue","undefined","concurrency","Number","POSITIVE_INFINITY","deepFilter","entryFilter","errorFilter","pathSegmentSeparator","sep","fsScandirSettings","followSymbolicLinks","fs","stats","throwErrorOnBrokenSymbolicLink","option","default"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,qBAAD,CAAzB;;AACA,MAAME,QAAN,CAAe;AACXC,EAAAA,WAAW,CAACC,QAAQ,GAAG,EAAZ,EAAgB;AACvB,SAAKA,QAAL,GAAgBA,QAAhB;AACA,SAAKC,QAAL,GAAgB,KAAKC,SAAL,CAAe,KAAKF,QAAL,CAAcC,QAA7B,EAAuCE,SAAvC,CAAhB;AACA,SAAKC,WAAL,GAAmB,KAAKF,SAAL,CAAe,KAAKF,QAAL,CAAcI,WAA7B,EAA0CC,MAAM,CAACC,iBAAjD,CAAnB;AACA,SAAKC,UAAL,GAAkB,KAAKL,SAAL,CAAe,KAAKF,QAAL,CAAcO,UAA7B,EAAyC,IAAzC,CAAlB;AACA,SAAKC,WAAL,GAAmB,KAAKN,SAAL,CAAe,KAAKF,QAAL,CAAcQ,WAA7B,EAA0C,IAA1C,CAAnB;AACA,SAAKC,WAAL,GAAmB,KAAKP,SAAL,CAAe,KAAKF,QAAL,CAAcS,WAA7B,EAA0C,IAA1C,CAAnB;AACA,SAAKC,oBAAL,GAA4B,KAAKR,SAAL,CAAe,KAAKF,QAAL,CAAcU,oBAA7B,EAAmDf,IAAI,CAACgB,GAAxD,CAA5B;AACA,SAAKC,iBAAL,GAAyB,IAAIf,SAAS,CAACC,QAAd,CAAuB;AAC5Ce,MAAAA,mBAAmB,EAAE,KAAKb,QAAL,CAAca,mBADS;AAE5CC,MAAAA,EAAE,EAAE,KAAKd,QAAL,CAAcc,EAF0B;AAG5CJ,MAAAA,oBAAoB,EAAE,KAAKV,QAAL,CAAcU,oBAHQ;AAI5CK,MAAAA,KAAK,EAAE,KAAKf,QAAL,CAAce,KAJuB;AAK5CC,MAAAA,8BAA8B,EAAE,KAAKhB,QAAL,CAAcgB;AALF,KAAvB,CAAzB;AAOH;;AACDd,EAAAA,SAAS,CAACe,MAAD,EAASvB,KAAT,EAAgB;AACrB,WAAOuB,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuCA,MAAvC,GAAgDvB,KAAvD;AACH;;AAnBU;;AAqBfD,OAAO,CAACyB,OAAR,GAAkBpB,QAAlB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst path = require(\"path\");\nconst fsScandir = require(\"@nodelib/fs.scandir\");\nclass Settings {\n    constructor(_options = {}) {\n        this._options = _options;\n        this.basePath = this._getValue(this._options.basePath, undefined);\n        this.concurrency = this._getValue(this._options.concurrency, Number.POSITIVE_INFINITY);\n        this.deepFilter = this._getValue(this._options.deepFilter, null);\n        this.entryFilter = this._getValue(this._options.entryFilter, null);\n        this.errorFilter = this._getValue(this._options.errorFilter, null);\n        this.pathSegmentSeparator = this._getValue(this._options.pathSegmentSeparator, path.sep);\n        this.fsScandirSettings = new fsScandir.Settings({\n            followSymbolicLinks: this._options.followSymbolicLinks,\n            fs: this._options.fs,\n            pathSegmentSeparator: this._options.pathSegmentSeparator,\n            stats: this._options.stats,\n            throwErrorOnBrokenSymbolicLink: this._options.throwErrorOnBrokenSymbolicLink\n        });\n    }\n    _getValue(option, value) {\n        return option !== null && option !== void 0 ? option : value;\n    }\n}\nexports.default = Settings;\n"]},"metadata":{},"sourceType":"script"}